import httpx

from fastapi import APIRouter, HTTPException
from fastapi.security import HTTPBearer
from fastapi_cache.decorator import cache

from bot import send_notification
from notifications.schema import SMassage
from conf.config import settings
from aiogram import Bot

BOT = Bot(token=settings.bot_token)
emoji_dict = dict(buy="–ö—É–ø–ª–µ–Ω–æ üü¢", sell="–ü—Ä–æ–¥–∞–Ω–æ üî¥", USD="üá∫üá∏", EUR="üá™üá∫")

expected_token = settings.expected_token
security = HTTPBearer()

router = APIRouter(
    prefix='/telegram',
    tags=['send to telega']
)


@router.post("/")
async def send_to_group(body: SMassage) -> None:
    try:
        # –§–æ—Ä–º—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –¥–∞–Ω–∏—Ö –∑ –æ–±'—î–∫—Ç–∞ SMassage
        message = (
            f"{body.lo_address}\n"
            f"{emoji_dict.get(body.movement)}\n"
            f"–í–∞–ª—é—Ç–∞: {emoji_dict.get(body.val)}\n"
            f"–°—É–º–∞ –≤–∞–ª—é—Ç–∏: {body.val_sum}\n"
            f"–°—É–º–∞ –≥—Ä–∏–≤–Ω—ñ: {body.val_national_sum}\n"
            f"–ö—É—Ä—Å: {body.course}\n"
        )
        await send_notification(body.chat_id, message, BOT)
    except httpx.HTTPStatusError as e:
        raise HTTPException(status_code=e.response.status_code, detail="External API returned error")
    except httpx.RequestError:
        raise HTTPException(status_code=500, detail="Error connecting to external API")

